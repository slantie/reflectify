// // This is your Prisma schema file

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }

// enum SubjectType {
//   MANDATORY
//   ELECTIVE
// }

// enum LectureType {
//   LECTURE
//   LAB
//   TUTORIAL
//   SEMINAR
//   PROJECT
// }

// enum FormStatus {
//   DRAFT
//   ACTIVE
//   CLOSED
// }

// model OTP {
//   id        String   @id @default(uuid()) @map("_id")
//   email     String
//   otp       String
//   expiresAt DateTime @map("expires_at")
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")

//   @@map("otps")
// }

// model College {
//   id            String       @id @default(uuid()) @map("_id")
//   name          String       @unique
//   websiteUrl    String       @map("website_url")
//   address       String
//   contactNumber String       @map("contact_number")
//   logo          String
//   images        Json
//   departments   Department[]
//   createdAt     DateTime     @default(now()) @map("created_at")
//   updatedAt     DateTime     @updatedAt @map("updated_at")

//   @@map("colleges")
// }

// model Department {
//   id                String              @id @default(uuid()) @map("_id")
//   name              String
//   abbreviation      String
//   hodName           String              @map("hod_name")
//   hodEmail          String              @map("hod_email")
//   collegeId         String              @map("college_id")
//   college           College             @relation(fields: [collegeId], references: [id], onDelete: Cascade)
//   semesters         Semester[]
//   faculties         Faculty[]
//   subjects          Subject[]
//   students          Student[]
//   Division          Division[]
//   createdAt         DateTime            @default(now()) @map("created_at")
//   updatedAt         DateTime            @updatedAt @map("updated_at")
//   SubjectAllocation SubjectAllocation[]

//   @@unique([name, collegeId])
//   @@index([collegeId])
//   @@map("departments")
// }

// model Semester {
//   id             String              @id @default(uuid()) @map("_id")
//   name           String              @map("name")
//   departmentId   String              @map("department_id")
//   semesterNumber Int                 @map("semester_number")
//   academicYear   String              @map("academic_year")
//   department     Department          @relation(fields: [departmentId], references: [id], onDelete: Cascade)
//   divisions      Division[]
//   subjects       Subject[]
//   students       Student[]
//   allocations    SubjectAllocation[]
//   createdAt      DateTime            @default(now()) @map("created_at")
//   updatedAt      DateTime            @updatedAt @map("updated_at")

//   @@unique([departmentId, semesterNumber])
//   @@map("semesters")
// }

// model Division {
//   mentors            DivisionMentor[]    @relation("DivisionMentors")
//   name               String              @map("name")
//   id                 String              @id @default(uuid()) @map("_id")
//   departmentId       String              @map("department_id")
//   semesterId         String              @map("semester_id")
//   divisionName       String              @map("division_name")
//   studentCount       Int                 @map("student_count")
//   department         Department          @relation(fields: [departmentId], references: [id], onDelete: Cascade)
//   semester           Semester            @relation(fields: [semesterId], references: [id], onDelete: Cascade)
//   subjectAllocations SubjectAllocation[]
//   feedbackForms      FeedbackForm[]
//   createdAt          DateTime            @default(now()) @map("created_at")
//   updatedAt          DateTime            @updatedAt @map("updated_at")
//   DivisionMentor     DivisionMentor[]
//   Student            Student[]

//   @@unique([departmentId, divisionName, semesterId])
//   @@index([departmentId, semesterId])
//   @@index([semesterId])
//   @@map("divisions")
// }

// model Subject {
//   id               String              @id @default(uuid()) @map("_id")
//   departmentId     String              @map("department_id")
//   semesterId       String              @map("semester_id")
//   name             String
//   abbreviation     String
//   subjectCode      String              @map("subject_code")
//   type             SubjectType         @default(MANDATORY)
//   department       Department          @relation(fields: [departmentId], references: [id], onDelete: Cascade)
//   semester         Semester            @relation(fields: [semesterId], references: [id], onDelete: Cascade)
//   allocations      SubjectAllocation[]
//   createdAt        DateTime            @default(now()) @map("created_at")
//   updatedAt        DateTime            @updatedAt @map("updated_at")
//   FeedbackQuestion FeedbackQuestion[]

//   @@unique([departmentId, abbreviation])
//   @@index([departmentId, semesterId])
//   @@index([semesterId])
//   @@map("subjects")
// }

// model DivisionMentor {
//   id         String   @id @default(uuid()) @map("_id")
//   divisionId String   @map("division_id")
//   facultyId  String   @map("faculty_id")
//   division   Division @relation("DivisionMentors", fields: [divisionId], references: [id], onDelete: Cascade)
//   faculty    Faculty  @relation(fields: [facultyId], references: [id], onDelete: Cascade)
//   createdAt  DateTime @default(now()) @map("created_at")
//   updatedAt  DateTime @updatedAt @map("updated_at")
//   Division   Division @relation(fields: [divisionId], references: [id])

//   @@unique([divisionId, facultyId])
//   @@index([divisionId])
//   @@index([facultyId])
//   @@map("division_mentors")
// }

// model Faculty {
//   id                String              @id @default(uuid()) @map("_id")
//   name              String
//   abbreviation      String              @unique
//   email             String              @unique
//   designation       String
//   seatingLocation   String              @map("seating_location")
//   image             String?
//   joiningDate       DateTime            @map("joining_date")
//   allocations       SubjectAllocation[]
//   mentoredDivisions DivisionMentor[]
//   FeedbackQuestion  FeedbackQuestion[]
//   departmentId      String              @map("department_id")
//   department        Department          @relation(fields: [departmentId], references: [id], onDelete: Cascade)

//   @@index([departmentId])
//   @@map("faculties")
// }

// model Student {
//   id               String            @id @default(uuid()) @map("_id")
//   name             String
//   enrollmentNumber String            @unique @map("enrollment_number")
//   departmentId     String            @map("department_id")
//   semesterId       String            @map("semester_id")
//   divisionId       String            @map("division_id")
//   batch            String
//   email            String            @unique
//   image            String?
//   phoneNumber      String            @map("phone_number")
//   academicYear     String            @map("academic_year")
//   department       Department        @relation(fields: [departmentId], references: [id], onDelete: Cascade)
//   semester         Semester          @relation(fields: [semesterId], references: [id], onDelete: Cascade)
//   division         Division          @relation(fields: [divisionId], references: [id], onDelete: Cascade)
//   responses        StudentResponse[]
//   createdAt        DateTime          @default(now()) @map("created_at")
//   updatedAt        DateTime          @updatedAt @map("updated_at")
//   formAccess       FormAccess[]

//   @@index([departmentId, semesterId, divisionId])
//   @@index([divisionId])
//   @@index([semesterId])
//   @@map("students")
// }

// model Admin {
//   id          String   @id @default(uuid()) @map("_id")
//   name        String
//   designation String
//   email       String   @unique
//   password    String
//   isSuper     Boolean  @default(false) @map("is_super")
//   createdAt   DateTime @default(now()) @map("created_at")
//   updatedAt   DateTime @updatedAt @map("updated_at")

//   @@map("admins")
// }

// model SubjectAllocation {
//   id            String              @id @default(uuid()) @map("_id")
//   departmentId  String              @map("department_id")
//   facultyId     String              @map("faculty_id")
//   subjectId     String              @map("subject_id")
//   divisionId    String              @map("division_id")
//   semesterId    String              @map("semester_id")
//   lectureType   LectureType
//   batch         String              @default("-")
//   academicYear  String              @map("academic_year")
//   department    Department          @relation(fields: [departmentId], references: [id], onDelete: Cascade)
//   faculty       Faculty             @relation(fields: [facultyId], references: [id], onDelete: Cascade)
//   subject       Subject             @relation(fields: [subjectId], references: [id], onDelete: Cascade)
//   division      Division            @relation(fields: [divisionId], references: [id], onDelete: Cascade)
//   semester      Semester            @relation(fields: [semesterId], references: [id], onDelete: Cascade)
//   feedbackForms FeedbackForm[]
//   // studentResponses StudentResponse[]
//   analytics     FeedbackAnalytics[]
//   createdAt     DateTime            @default(now()) @map("created_at")
//   updatedAt     DateTime            @updatedAt @map("updated_at")

//   @@unique([facultyId, subjectId, divisionId, semesterId, lectureType, batch])
//   @@index([facultyId])
//   @@index([subjectId])
//   @@index([divisionId])
//   @@index([semesterId])
//   @@index([facultyId, subjectId])
//   @@index([divisionId, semesterId])
//   @@index([departmentId])
//   @@map("subject_allocations")
// }

// model FeedbackForm {
//   id                  String             @id @default(uuid()) @map("_id")
//   divisionId          String             @map("division_id")
//   subjectAllocationId String             @map("subject_allocation_id")
//   title               String
//   startDate           DateTime           @map("start_date")
//   endDate             DateTime           @map("end_date")
//   status              FormStatus         @default(DRAFT)
//   accessHash          String             @unique @map("access_hash")
//   division            Division           @relation(fields: [divisionId], references: [id], onDelete: Cascade)
//   subjectAllocation   SubjectAllocation  @relation(fields: [subjectAllocationId], references: [id], onDelete: Cascade)
//   questions           FeedbackQuestion[]
//   responses           StudentResponse[]
//   createdAt           DateTime           @default(now()) @map("created_at")
//   updatedAt           DateTime           @updatedAt @map("updated_at")
//   formAccess          FormAccess[]

//   @@index([divisionId, subjectAllocationId, status])
//   @@index([subjectAllocationId])
//   @@map("feedback_forms")
// }

// model FormAccess {
//   id          String       @id @default(uuid()) @map("_id")
//   formId      String
//   studentId   String
//   accessToken String       @unique
//   isSubmitted Boolean      @default(false)
//   form        FeedbackForm @relation(fields: [formId], references: [id], onDelete: Cascade)
//   student     Student      @relation(fields: [studentId], references: [id], onDelete: Cascade)
//   createdAt   DateTime     @default(now()) @map("created_at")
//   updatedAt   DateTime     @updatedAt @map("updated_at")

//   @@unique([formId, studentId])
//   @@index([formId])
//   @@index([studentId])
//   @@map("form_access")
// }

// model QuestionCategory {
//   id           String             @id @default(uuid()) @map("_id")
//   categoryName String             @map("category_name")
//   description  String
//   questions    FeedbackQuestion[]
//   createdAt    DateTime           @default(now()) @map("created_at")
//   updatedAt    DateTime           @updatedAt @map("updated_at")

//   @@map("question_categories")
// }

// model FeedbackQuestion {
//   id           String            @id @default(uuid()) @map("_id")
//   formId       String            @map("form_id")
//   categoryId   String            @map("category_id")
//   facultyId    String            @map("faculty_id")
//   subjectId    String            @map("subject_id")
//   batch        String            @default("None") @map("batch")
//   text         String
//   type         String
//   isRequired   Boolean           @default(true) @map("is_required")
//   displayOrder Int               @map("display_order")
//   form         FeedbackForm      @relation(fields: [formId], references: [id], onDelete: Cascade)
//   category     QuestionCategory  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
//   faculty      Faculty           @relation(fields: [facultyId], references: [id], onDelete: Cascade)
//   subject      Subject           @relation(fields: [subjectId], references: [id], onDelete: Cascade)
//   responses    StudentResponse[]
//   createdAt    DateTime          @default(now()) @map("created_at")
//   updatedAt    DateTime          @updatedAt @map("updated_at")

//   @@index([formId, categoryId])
//   @@index([categoryId])
//   @@index([facultyId])
//   @@index([subjectId])
//   @@map("feedback_questions")
// }

// model StudentResponse {
//   id          String           @id @default(uuid()) @map("_id")
//   studentId   String           @map("student_id")
//   formId      String           @map("form_id")
//   questionId  String           @map("question_id")
//   // subjectAllocationId String            @map("subject_allocation_id")
//   value       Json // Using Json for flexible response storage
//   submittedAt DateTime         @default(now()) @map("submitted_at")
//   student     Student          @relation(fields: [studentId], references: [id], onDelete: Cascade)
//   form        FeedbackForm     @relation(fields: [formId], references: [id], onDelete: Cascade)
//   question    FeedbackQuestion @relation(fields: [questionId], references: [id], onDelete: Cascade)
//   // subjectAllocation   SubjectAllocation @relation(fields: [subjectAllocationId], references: [id], onDelete: Cascade)
//   createdAt   DateTime         @default(now()) @map("created_at")
//   updatedAt   DateTime         @updatedAt @map("updated_at")

//   @@index([studentId, formId])
//   // @@index([subjectAllocationId, questionId])
//   @@index([formId])
//   @@index([questionId])
//   @@map("student_responses")
// }

// model FeedbackAnalytics {
//   id                  String            @id @default(uuid()) @map("_id")
//   subjectAllocationId String            @map("subject_allocation_id")
//   divisionId          String            @map("division_id")
//   facultyId           String            @map("faculty_id")
//   averageRating       Float             @map("average_rating")
//   responseCount       Int               @map("response_count")
//   completionRate      Float             @map("completion_rate")
//   calculatedAt        DateTime          @map("calculated_at")
//   subjectAllocation   SubjectAllocation @relation(fields: [subjectAllocationId], references: [id], onDelete: Cascade)
//   createdAt           DateTime          @default(now()) @map("created_at")
//   updatedAt           DateTime          @updatedAt @map("updated_at")

//   @@index([subjectAllocationId, divisionId])
//   @@map("feedback_analytics")
// }

// model AnalyticsView {
//   id              String   @id @default(uuid()) @map("_id")
//   viewName        String   @map("view_name")
//   queryDefinition String   @map("query_definition")
//   parameters      Json
//   createdAt       DateTime @default(now()) @map("created_at")
//   updatedAt       DateTime @updatedAt @map("updated_at")

//   @@map("analytics_views")
// }

// model CustomReport {
//   id           String   @id @default(uuid()) @map("_id")
//   reportName   String   @map("report_name")
//   description  String
//   reportConfig Json     @map("report_config")
//   isActive     Boolean  @default(true) @map("is_active")
//   createdAt    DateTime @default(now()) @map("created_at")
//   updatedAt    DateTime @updatedAt @map("updated_at")

//   @@map("custom_reports")
// }
